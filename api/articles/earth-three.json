{"title":"three.js 学习之自转的地球","slug":"earth-three","date":"2018-04-17T12:46:25.000Z","updated":"2018-05-11T09:24:46.000Z","comments":true,"excerpt":"","content":"<p>首先需要知道什么是 three.js。 简单的说，three.js 是一个非常优秀的 WebGL 开源框架, three(3d) + js(javaScript)。其开源项目的地址：</p>\n<p>github: <a href=\"https://github.com/mrdoob/three.js\" target=\"_blank\" rel=\"noopener\">https://github.com/mrdoob/three.js</a></p>\n<p>而 WebGL 是在浏览器中实现三维效果的一套规范。</p>\n<p>在 three.js 中有几大重要的概念需要先了解一下：</p>\n<ul>\n<li>场景（scene）</li>\n<li>相机（camera）</li>\n<li>渲染器（renderer）</li>\n</ul>\n<p><strong>关键</strong>：有了这三样东西，我们才能够使用相机将场景渲染到网页上去`</p>\n<h4 id=\"1、scene\"><a href=\"#1、scene\" class=\"headerlink\" title=\"1、scene\"></a>1、scene</h4><p>在 WebGL 世界里，场景是一个非常重要的概念，它是存放所有物体的容器。在 three.js 里面新建一个场景很简单，new THREE.Scene 实例就好了。代码如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> scene = <span class=\"keyword\">new</span> THREE.Scene();  <span class=\"comment\">// 场景只有一种</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"2、camera\"><a href=\"#2、camera\" class=\"headerlink\" title=\"2、camera\"></a>2、camera</h4><ul>\n<li>相机（camera）</li>\n</ul>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> camera = <span class=\"keyword\">new</span> THREE.PerspectiveCamera(<span class=\"number\">75</span>, <span class=\"built_in\">window</span>.innerWidth/<span class=\"built_in\">window</span>.innerHeight, <span class=\"number\">0.1</span>, <span class=\"number\">1000</span>) ;</span><br></pre></td></tr></table></figure>\n<p><code>PerspectiveCamera( fov, aspect, near, far )</code> 参数解析。</p>\n<ul>\n<li>fov(Number): 仰角的角度</li>\n<li>aspect(Number): 截平面长宽比，多为画布的长宽比。</li>\n<li>near(Number): 近面的距离</li>\n<li>far(Number): 远面的距离</li>\n</ul>\n<p>图解 THREE.PerspectiveCamera 参数，如下:<br><img src=\"https://tse3-mm.cn.bing.net/th?id=OIP.3Jjn7ZAyk9IZUQWgLklF2AHaDn&amp;w=300&amp;h=300&amp;p=0&amp;o=5&amp;pid=1.7\" alt=\"\"></p>\n<h4 id=\"3、renderer\"><a href=\"#3、renderer\" class=\"headerlink\" title=\"3、renderer\"></a>3、renderer</h4><p>渲染器决定了渲染的结果应该画在页面的什么元素上面，并且以怎样的方式来绘制。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> renderer = <span class=\"keyword\">new</span> THREE.WebGLRenderer();</span><br><span class=\"line\">renderer.setSize(<span class=\"built_in\">window</span>.innerWidth, <span class=\"built_in\">window</span>.innerHeight);</span><br><span class=\"line\"><span class=\"built_in\">document</span>.body.appendChild(renderer.domElement);</span><br></pre></td></tr></table></figure>\n<p>好了，几大概念简单的说了，还不是很明白也不打紧，先看下最终的效果：</p>\n<p><img src=\"http://bluestest.oss-cn-shanghai.aliyuncs.com/earth.gif\" alt=\"\"></p>\n<h4 id=\"开始画地球\"><a href=\"#开始画地球\" class=\"headerlink\" title=\"开始画地球\"></a>开始画地球</h4><p>1、导入 <code>three.min.js</code> 文件，可以下载到本地，也可以采用 cdn, 我这里采用的是下载下来的方式：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"assets/plus/threejs/three.min.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"https://cdn.bootcss.com/three.js/r83/three.min.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<p>2、准备渲染器 renderer 的 domElement 元素</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div id=<span class=\"string\">\"canvas-frame\"</span>&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<p><code>&lt;style&gt;&lt;/style&gt;</code> 中加入 css:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> div#canvas-frame &#123;</span><br><span class=\"line\">     border: none;</span><br><span class=\"line\">     cursor: pointer;</span><br><span class=\"line\">     width: <span class=\"number\">100</span>%;</span><br><span class=\"line\">     height: <span class=\"number\">100</span>vh;</span><br><span class=\"line\">     background-color: #EEEEEE;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>3、实例化一个 scence 对象, 用来存放我们的地球实体。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 场景</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> scene;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initScene</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   scene = <span class=\"keyword\">new</span> THREE.Scene();</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>4、准备搭建 camera 的位置，和调节角度,在 three.js 里面采用给的是<code>右手坐标系</code>：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 相机</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> camera;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initCamera</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   camera = <span class=\"keyword\">new</span> THREE.PerspectiveCamera(<span class=\"number\">45</span>, width / height, <span class=\"number\">1</span>, <span class=\"number\">10000</span>);</span><br><span class=\"line\">   camera.position.x = <span class=\"number\">-500</span>;</span><br><span class=\"line\">   camera.position.y = <span class=\"number\">500</span>;</span><br><span class=\"line\">   camera.position.z = <span class=\"number\">-500</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里采用的是透视相机。 视角越大，看到的场景越大，那么中间的物体相对于整个场景来说，就越小了。</p>\n<p>5、准备渲染器 renderer</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 渲染器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> renderer;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initThree</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">   width = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas-frame'</span>).clientWidth;</span><br><span class=\"line\">   height = <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas-frame'</span>).clientHeight;</span><br><span class=\"line\">   <span class=\"comment\">// 实例化 THREE.WebGLRenderer 对象。</span></span><br><span class=\"line\">   renderer = <span class=\"keyword\">new</span> THREE.WebGLRenderer(&#123;</span><br><span class=\"line\">      \t\t\t\t\tantialias: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            \t\t\talpha: <span class=\"literal\">true</span>,</span><br><span class=\"line\">            \t\t\tcanvas: renderer</span><br><span class=\"line\">        \t\t\t  &#125;);</span><br><span class=\"line\">   <span class=\"comment\">// 设置 renderer 的大小</span></span><br><span class=\"line\">   renderer.setSize(width, height);</span><br><span class=\"line\">   <span class=\"comment\">// 挂载到准备的 domElement 上</span></span><br><span class=\"line\">   <span class=\"built_in\">document</span>.getElementById(<span class=\"string\">'canvas-frame'</span>).appendChild(renderer.domElement); </span><br><span class=\"line\">   <span class=\"comment\">// Sets the clear color and opacity.</span></span><br><span class=\"line\">   renderer.setClearColor(<span class=\"number\">0x000000</span>, <span class=\"number\">1.0</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里对 THREE.WebGLRenderer 实例的参数进行讲解。</p>\n<ul>\n<li><code>canvas</code> - 渲染器绘制输出的那个 canvas, 这对应于下面的 domElement 属性。如果没有在设置，则会创建一个新的画布元素。</li>\n<li><code>antialias</code> - 抗锯齿化</li>\n<li><code>alpha</code> - alpha 缓冲区</li>\n</ul>\n<p>6、画地球啦，这里的地球其实就是在一个球体上贴上带有地球纹路的贴纸。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 地球</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> earthMesh;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initEarth</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 实例化一个半径为 200 的球体</span></span><br><span class=\"line\">   <span class=\"keyword\">var</span> earthGeo = <span class=\"keyword\">new</span> THREE.SphereGeometry(<span class=\"number\">200</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">   <span class=\"keyword\">var</span> earthMater = <span class=\"keyword\">new</span> THREE.MeshPhongMaterial(&#123;</span><br><span class=\"line\">            map: <span class=\"keyword\">new</span> THREE.TextureLoader().load(<span class=\"string\">'./assets/earth.jpg'</span>)</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">   earthMesh = <span class=\"keyword\">new</span> THREE.Mesh(earthGeo, earthMater);</span><br><span class=\"line\">   scene.add(earthMesh);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>7、给地球加上云层；</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 云</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> cloudsMesh;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initClouds</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">// 实例化一个球体，半径要比地球的大一点，从而实现云飘咋地球上的感觉</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> cloudsGeo = <span class=\"keyword\">new</span> THREE.SphereGeometry(<span class=\"number\">201</span>, <span class=\"number\">100</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// transparent 与 opacity 搭配使用，设置材质的透明度，当 transparent 设为 true 时， 会对材质特殊处理，对性能会有些损耗。</span></span><br><span class=\"line\">    <span class=\"keyword\">var</span> cloudsMater = <span class=\"keyword\">new</span> THREE.MeshPhongMaterial(&#123;</span><br><span class=\"line\">        alphaMap: <span class=\"keyword\">new</span> THREE.TextureLoader().load(<span class=\"string\">'./assets/clouds.jpg'</span>),</span><br><span class=\"line\">        transparent: <span class=\"literal\">true</span>,</span><br><span class=\"line\">        opacity: <span class=\"number\">0.2</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    cloudsMesh = <span class=\"keyword\">new</span> THREE.Mesh(cloudsGeo, cloudsMater);</span><br><span class=\"line\">    scene.add(cloudsMesh);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>到这里地球就画完了，但是，就像现实的世界一样，如果你不给它打点光，世界就是漆黑一片的，所以接下来给我们的 scene 加点光吧。</p>\n<p>8、给世界来点光，世界还你一片彩。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 光源</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> light;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">initLight</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// A light source positioned directly above the scene, with color fading from the sky color to the ground color. </span></span><br><span class=\"line\">    <span class=\"comment\">// 位于场景正上方的光源，颜色从天空颜色渐变为地面颜色。</span></span><br><span class=\"line\">    <span class=\"comment\">//  var light = new THREE.HemisphereLight(0xffffbb, 0x080820, 1);</span></span><br><span class=\"line\">    <span class=\"comment\">// scene.add(light);</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 环境光</span></span><br><span class=\"line\">    light = <span class=\"keyword\">new</span> THREE.AmbientLight(<span class=\"number\">0xFFFFFF</span>);</span><br><span class=\"line\">    light.position.set(<span class=\"number\">100</span>, <span class=\"number\">100</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">    scene.add(light);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// 平行光</span></span><br><span class=\"line\">    <span class=\"comment\">// 位置不同，方向光作用于物体的面也不同，看到的物体各个面的颜色也不一样</span></span><br><span class=\"line\">    <span class=\"comment\">// light = new THREE.DirectionalLight(0xffffbb, 1);</span></span><br><span class=\"line\">    <span class=\"comment\">// light.position.set(-1, 1, 1);</span></span><br><span class=\"line\">    <span class=\"comment\">// scene.add(light);</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这里采用的是环境光，其它注释了的两种光的效果也不错哦~<br>直到这里，地球就画出来了，但是我们的题目是画一颗自转的地球，那我们如何让它自己转起来呢？我们继续往下看。</p>\n<p>9、引入一个控制器，这里如果你足够厉害自己写也可以哦，我采用的开源的。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script src=<span class=\"string\">\"assets/plus/threejs/js/controls/OrbitControls.js\"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 载入控制器</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> controls = <span class=\"keyword\">new</span> THREE.OrbitControls(camera, renderer.domElement);</span><br></pre></td></tr></table></figure>\n<p>10、定义地球和云层自转的动画，速度不一样会更像哦。这里说说为什么循环动画使用的是 <code>requestAnimationFrame</code>, 而不是更熟知的 <code>setInterval</code>？<code>setInterval</code> 是到点就往任务队列里插，是 JS 引擎的定时器方法；<code>requestAnimationFrame</code> 是跟着浏览器的绘制走，浏览器每次重绘的时候调用，是 DOM 引擎提供的方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">animate</span>(<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">  controls.update();</span><br><span class=\"line\">  <span class=\"comment\">// 地球自转</span></span><br><span class=\"line\">  earthMesh.rotation.y -= <span class=\"number\">0.002</span>;</span><br><span class=\"line\">  <span class=\"comment\">// 漂浮的云层</span></span><br><span class=\"line\">  cloudsMesh.rotation.y -= <span class=\"number\">0.005</span>;</span><br><span class=\"line\">  cloudsMesh.rotation.z += <span class=\"number\">0.005</span>;</span><br><span class=\"line\">  renderer.render(scene, camera);</span><br><span class=\"line\">  requestAnimationFrame(animate);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>自转的地球到这里就大功告成啦~</p>\n<p>完整的代码见：<a href=\"https://github.com/jiangyuzhen/three-earth\" target=\"_blank\" rel=\"noopener\">https://github.com/jiangyuzhen/three-earth</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Tips: 有的小伙伴克隆上面的代码后， 用双击 index.html 的方式看不到效果，可以自己搭一个静态服务或者试试 anywhere (随启随用的静态文件服务器)：</span><br></pre></td></tr></table></figure>\n<p>步骤如下:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 全局安装</span></span><br><span class=\"line\">npm i anywhere -g </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 文件根目录下执行</span></span><br><span class=\"line\">anywhere</span><br></pre></td></tr></table></figure>\n<h4 id=\"相关资料\"><a href=\"#相关资料\" class=\"headerlink\" title=\"相关资料\"></a>相关资料</h4><ul>\n<li><a href=\"https://threejs.org/\" target=\"_blank\" rel=\"noopener\">https://threejs.org/</a></li>\n<li><a href=\"https://github.com/omni360/three.js.sourcecode\" target=\"_blank\" rel=\"noopener\">https://github.com/omni360/three.js.sourcecode</a></li>\n<li><a href=\"http://www.hewebgl.com/article/articledir/3\" target=\"_blank\" rel=\"noopener\">http://www.hewebgl.com/article/articledir/3</a></li>\n</ul>\n","thumbnail":["/img/bg/d.jpg"],"categories":[{"name":"code","path":"api/categories/code.json"}],"tags":[{"name":"three.js","path":"api/tags/three.js.json"},{"name":"demo","path":"api/tags/demo.json"}]}